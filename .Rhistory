View(list_k)
list_k
View(data4kappa)
list_k <- list()
for (i in varnames){
testdata_BKC <- datafile %>%
mutate(bkc = factor(datafile[[i]])) %>%
select(id_participante,avaliador,bkc) %>%
filter(avaliador == "BKC")
testdata_RP <- datafile %>%
mutate(rp = datafile[[i]]) %>%
select(id_participante,avaliador,rp) %>%
filter(avaliador == "RP")
#-----------------------------------------------------------------#
data4kappa <- merge(testdata_BKC,testdata_RP,by = "id_participante")
data4kappa <- select(data4kappa, bkc, rp)
#-----------------------------------------------------------------#
list_k[[i]] <- kappa2(data4kappa)
}
list_k
str(list_k)
v3 <- "C:/Users/Rafael/Documents/EMOCEMP V3 - Oficial_May 29, 2020_10.18.csv"
emocemp_messy <- read.csv(v3,
skip = 1,
encoding = "UTF-8",
stringsAsFactors = FALSE)
# Exclude irrelevant rows and collumns from table
emocempv3 <- emocemp_messy[-c(1),-c(1:17)]
emocempv3 <- emocempv3[,-79]
View(emocempv3)
colnames(emocempv3)
colnames(emocempv3) <- c("data_visita",
"id_centro",
"id_paciente",
"peso",
"altura",
"imc",
"tabagismo",
"sf_piramidal",
"sf_cerebelar",
"sf_sensitivo",
"sf_tronco",
"sf_visual",
"sf_vesical_intestinal",
"sf_cerebral",
"conv_sf_visual",
"conv_sf_vesical_intestinal",
"deambula",
"edss",
"data_cerebro_rm_v2",
"data_orbitas_rm_v2",
"data_medula_rm_v2",
"rm_encefalo",
"rm_encefalo_realce",
"rm_encefalo_coment",
"rm_orbita",
"rm_orbita_realce_text",
"rm_medula",
"rm_medula_realce_text",
"rm_medula_coment",
"rm_outros_texto",
"medicacoes_cont",
"criterio_diag_v2",
"criterio_diag_outros_v2_text",
"fan_titulo_padrao",
"fr",
"vhs",
"anti-ssa",
"anti-ssb",
"vit_d",
"vit_b12",
"outros_labs",
"dmd_v2",
"ifn_b1a_im_dose",
"ifn_b1a_sc22_dose",
"ifn_b1a_sc44_dose",
"ifn_b1b_dose",
"acetato_glati_dose",
"teriflunomida_dose",
"fumarato_dose",
"fingolimod_dose",
"natalizumba_dose",
"alentuzumab_dose",
"rituximab_dose",
"azatioprina_dose",
"outros_dose",
"efeitos_adversos",
"efeitos_adversos_texto",
"observacoes",
"novo_surto_v2",
"novas_sindromes_clinicas",
"nob_data",
"nou_data",
"mielite_p_data",
"mielite_t_data",
"adem_data",
"romboencefalite_data",
"outras_data",
"lcr_cel",
"lcr_dif",
"lcr_prot",
"lcr_boc",
"lcr_igg_i",
"tto_fa_v2",
"mpiv_dose",
"corticoide_vo_dose",
"igiv_dose",
"plex_dose")
View(emocempv3)
colnames(emocempv3) <- c("data_visita",
"id_centro",
"id_paciente",
"peso",
"altura",
"imc",
"tabagismo",
"sf_piramidal",
"sf_cerebelar",
"sf_sensitivo",
"sf_tronco",
"sf_visual",
"sf_vesical_intestinal",
"sf_cerebral",
"conv_sf_visual",
"conv_sf_vesical_intestinal",
"deambula",
"edss",
"data_cerebro_rm_v3",
"data_orbitas_rm_v3",
"data_medula_rm_v3",
"rm_encefalo",
"rm_encefalo_realce",
"rm_encefalo_coment",
"rm_orbita",
"rm_orbita_realce_text",
"rm_medula",
"rm_medula_realce_text",
"rm_medula_coment",
"rm_outros_texto",
"medicacoes_cont",
"criterio_diag_v3",
"criterio_diag_outros_v3_text",
"fan_titulo_padrao",
"fr",
"vhs",
"anti-ssa",
"anti-ssb",
"vit_d",
"vit_b12",
"outros_labs",
"dmd_v2",
"ifn_b1a_im_dose",
"ifn_b1a_sc22_dose",
"ifn_b1a_sc44_dose",
"ifn_b1b_dose",
"acetato_glati_dose",
"teriflunomida_dose",
"fumarato_dose",
"fingolimod_dose",
"natalizumba_dose",
"alentuzumab_dose",
"rituximab_dose",
"azatioprina_dose",
"outros_dose",
"efeitos_adversos",
"efeitos_adversos_texto",
"observacoes",
"novo_surto_v3",
"novas_sindromes_clinicas",
"nob_data",
"nou_data",
"mielite_p_data",
"mielite_t_data",
"adem_data",
"romboencefalite_data",
"outras_data",
"lcr_cel",
"lcr_dif",
"lcr_prot",
"lcr_boc",
"lcr_igg_i",
"tto_fa_v3",
"mpiv_dose",
"corticoide_vo_dose",
"igiv_dose",
"plex_dose")
v3 <- "C:/Users/Rafael/Documents/EMOCEMP V3 - Oficial_May 29, 2020_10.18.csv"
emocemp_messy <- read.csv(v3,
skip = 1,
encoding = "UTF-8",
stringsAsFactors = FALSE)
# Exclude irrelevant rows and collumns from table
emocempv3 <- emocemp_messy[-c(1),-c(1:17)]
emocempv3 <- emocempv3[,-79]
colnames(emocempv3) <- c("data_visita",
"id_centro",
"id_paciente",
"peso",
"altura",
"imc",
"tabagismo",
"sf_piramidal",
"sf_cerebelar",
"sf_sensitivo",
"sf_tronco",
"sf_visual",
"sf_vesical_intestinal",
"sf_cerebral",
"conv_sf_visual",
"conv_sf_vesical_intestinal",
"deambula",
"edss",
"data_cerebro_rm_v3",
"data_orbitas_rm_v3",
"data_medula_rm_v3",
"rm_encefalo",
"rm_encefalo_realce",
"rm_encefalo_coment",
"rm_orbita",
"rm_orbita_realce_text",
"rm_medula",
"rm_medula_realce_text",
"rm_medula_coment",
"rm_outros_texto",
"medicacoes_cont",
"criterio_diag_v3",
"criterio_diag_outros_v3_text",
"fan_titulo_padrao",
"fr",
"vhs",
"anti-ssa",
"anti-ssb",
"vit_d",
"vit_b12",
"outros_labs",
"dmd_v2",
"ifn_b1a_im_dose",
"ifn_b1a_sc22_dose",
"ifn_b1a_sc44_dose",
"ifn_b1b_dose",
"acetato_glati_dose",
"teriflunomida_dose",
"fumarato_dose",
"fingolimod_dose",
"natalizumba_dose",
"alentuzumab_dose",
"rituximab_dose",
"azatioprina_dose",
"outros_dose",
"efeitos_adversos",
"efeitos_adversos_texto",
"observacoes",
"novo_surto_v3",
"novas_sindromes_clinicas",
"nob_data",
"nou_data",
"mielite_p_data",
"mielite_t_data",
"adem_data",
"romboencefalite_data",
"outras_data",
"lcr_cel",
"lcr_dif",
"lcr_prot",
"lcr_boc",
"lcr_igg_i",
"tto_fa_v3",
"mpiv_dose",
"corticoide_vo_dose",
"igiv_dose",
"plex_dose")
name_clinical <- c("neurite_b",
"neurite_u",
"mielite_p",
"mielite_t",
"adem" ,
"romboencefalite",
"outras",
"nenhumas_das_sindromes")
clinical_df <- split_mcv("novas_sindromes_clinicas","8",emocempv3)
split_mcv <- function (var,n,dataf) {
charc <- as.character(dataf[[var]])
split <- str_split_fixed(charc, ",", n)
df <- as.data.frame(split)
# Change to numeric
ncol = as.numeric(n)
for (i in 1:n){
df[,i] <- as.numeric(df[,i])
df[,i]
df[,i][is.na(df[,i])] <- 0
}
return(df)
}
clinical_df <- split_mcv("novas_sindromes_clinicas","8",emocempv3)
library(stringr)
clinical_df <- split_mcv("novas_sindromes_clinicas","8",emocempv3)
View(clinical_df)
clinical_df <- mutate_mcv(name_clinical,clinical_df)
mutate_mcv <- function (names, df){
# Aceita uma lista de strings (names) e um data.frame resultante de split.mcv
# Tests
if (length(names) != ncol(df) ){
print("Names e colunas do Data Frame com tamanhos diferentes")
break
}
if (!is.data.frame(df)){
print("df precisa ser um Data Frame")
break
}
# Create empty data.frame
new_df <- NULL
# Loop variables
for (i in 1:length(names)) {
vec <- c()
# Loop trought rows
for (r in 1:nrow(df)) {
vec[r] <- any(df[r,] == i )}
# Bind logical vector to new_df and name column
vec <- as.numeric(vec)
new_df <- cbind(vec, new_df)
colnames(new_df)[1] <- names[i]
}
return(new_df)
}
clinical_df <- mutate_mcv(name_clinical,clinical_df)
View(clinical_df)
clinical_df <- split_mcv("novas_sindromes_clinicas","8",emocempv3)
clinical_df <- split_mcv("novas_sindromes_clinicas","8",emocempv3)
clinical_df <- mutate_mcv(name_clinical,clinical_df)
emocempv3 <- emocempv3[, names(emocempv3) != "novas_sindromes_clinicas"]
emocempv3 <- cbind(emocempv3, clinical_df)
name_brm <- c("1_lesao_perpendicular_cc_brm",
"apenas_bem_delimitadas_brm",
"5_ou_mais_t2_brm",
"2_ou_mais_peri_brm",
"1_ou_mais_tronco_brm" ,
"black_holes_brm",
"lesoes_difusas_bilat_brm",
"1_ou_mais_justa_brm",
"1_ou_mais_peri_brm",
"1_ou_mais_infra_brm",
"outros_realce_brm",
"nenhuma_das_alt_brm",
"nao_realizada_brm",
"outras_brm",
"realce_anel_inc_brm")
brm_df <- split_mcv("rm_encefalo","15",emocempv3)
View(brm_df)
brm_df <- split_mcv("rm_encefalo","15",emocempv3)
brm_df <- mutate_mcv(name_brm,brm_df)
emocempv3 <- emocempv3[, names(emocempv3) != "rm_encefalo"]
emocempv3 <- cbind(emocempv3, brm_df)
name_srm <- c("mielite_t_srm",
"mielite_centromed_srm",
"mielite_perif_srm",
"mielite_menos_3seg_srm",
"mielite_mais_3seg_srm" ,
"mielite_cerv_srm",
"mielite_dors_srm",
"mielite_lombo_srm",
"nenhuma_das_acima_srm",
"nao_realizada_srm",
"realce_srm",
"brigth_spot_srm",
"outras_srm")
srm_df <- split_mcv("rm_medula","13",emocempv3)
srm_df <- mutate_mcv(name_srm,srm_df)
emocempv3 <- emocempv3[, names(emocempv3) != "rm_medula"]
emocempv3 <- cbind(emocempv3, srm_df)
View(emocempv3)
load_all()
library(devtools)
load_all()
v1 <- clean_v1('C:/Users/Rafael/Documents/EMOCEMP V1 - Oficial_May21, 2020_08.04.csv')
View(v1)
v2 <- clean_v2('C:/Users/Rafael/Documents/emocempv2_2105.csv')
View(v2)
merge_visits(v1,v2,mode = "long",all.patients = TRUE)
visitas <- merge_visits(v1,v2,mode = "long",all.patients = TRUE)
View(visitas)
visitas_wide <- merge_visits(v1,v2,mode = "wide",all.patients = TRUE)
visitas_wide <- merge_visits(v1,v2,mode = "wide",all.patients = TRUE)
load_all()
visitas_wide <- merge_visits(v1,v2,mode = "wide",all.patients = TRUE)
View(visitas_wide)
getwd()
datafile <- "C:/Users/Rafael/Documents/MRI_spinal_EMOCEMP_V1_June 16, 2020_11.02.csv"
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
View(mridata)
# Rename
colnames(mridata) <-
# Define Clean
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
colnames(mridata)
View(mridata)
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"sequencias","axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
View(mridata)
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
View(mridata)
# Dumming variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
df <- clean("axialt2",mridata,3,names_at2)
load_all()
library(devtools)
load_all()
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
df <- clean("axialt2",mridata,3,names_at2)
View(df)
mridata <- clean("sagitalt2","mridata",3,names_sagt2)
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
mridata <- clean("axialt2",mridata,3,names_at2)
colnames(mridata)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
colnames(mridata)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
colnames(mridata)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
colnames(mridata)
exp(2)
?exp
2 ^ 20
2 ^ 20 / 100
10485 / 100
exp(10)
exp(11000)
exp(2)
exp(3)
exp(3)
exp(4)
log(7)
exp2(2)
exp(21)
# Mortalidade
mortalidade <- "C:/Users/Rafael/Downloads/sim_obitos.csv"
mortalidade <- read.csv(mortalidade, heade = TRUE)
View(mortalidade)
# Mortalidade
mortalidade <- "C:/Users/Rafael/Downloads/sim_obitos.csv"
# Mortalidade
file <- "C:/Users/Rafael/Downloads/sim_obitos.csv"
mortalidade <- read.csv2(file, header = TRUE)
View(mortalidade)
# Data POA
library(dplyr)
library(lubridate)
# Mortalidade
file <- download.file(https://dadosabertos.poa.br/dataset/fb73c905-abb8-4bc2-9d6b-697c94ccb10d/resource/d203681f-c555-4099-aef7-968d21361be8/download/sim_obitos.csv)
# Mortalidade
file <- download.file("https://dadosabertos.poa.br/dataset/fb73c905-abb8-4bc2-9d6b-697c94ccb10d/resource/d203681f-c555-4099-aef7-968d21361be8/download/sim_obitos.csv")
# Mortalidade
file <- download.file("https://dadosabertos.poa.br/dataset/fb73c905-abb8-4bc2-9d6b-697c94ccb10d/resource/d203681f-c555-4099-aef7-968d21361be8/download/sim_obitos.csv","C:/Users/Rafael/Download")
file <- "C:/Users/Rafael/Downloads/sim_obitos.csv"
mortalidade <- read.csv2(file, header = TRUE)
mortalidade <- read.csv2(file, header = TRUE, encoding = "UTF-8")
dmy(mortalidade$obito)
as.Date(mortalidade$obito)
mortalidade$obito
format(as.Date(mortalidade$obito),"%m/%Y")
format(as.Date(mortalidade$obito),"%m-%Y")
# Data POA
library(zoo)
as.yearmon(mortalidade$obito)
# Data POA
library(stringr)
str_replace(mortalidade$obito, "/","-")
mortalidade$obito str_replace(mortalidade$obito, "/","-")
mortalidade$obito <- str_replace(mortalidade$obito, "/","-")
as.Date(mortalidade$obito, "%m-%Y")
as.yearmon(mortalidade$obito, "%m-%Y")
?as.yearmon
as.Date(as.yearmon(mortalidade$obito, "%m-%Y"))
mortalidade$obito <- as.Date(as.yearmon(mortalidade$obito, "%m-%Y"))
install.packages("icd")
