library(ggplot2)
library(cowplot)
logist <- function(variavel, print = FALSE, df = NULL) {
if (!is.null(df)){
model <- glm(df ~ variavel,
family = "binomial"(link="logit"),
na.action = na.exclude)
}    else {
model <- glm(group ~ variavel, data ,
family = "binomial"(link="logit"),
na.action = na.exclude)
}
IC <- round(exp(cbind(OR = coef(model), confint(model))), digits = 3)
if(print){
print(summary(model))
print(IC)}
suma <- summary(model)
return(list(IC = IC, Model = suma ))
}
extract_model <- function(model){
IC <- model$IC[2,]
variable <- names(model$IC[,2])
p <- coef(model$Model)[,4]
df <- data.frame(var = variable[[2]],
OR = IC[[1]],
bottom = IC[[2]],
upper = IC[[3]],
pvalue = p[[2]])
return(df)
}
etnic_model <- logist(data$etnic)
etnic <- extract_model(etnic_model)
sex_model <- logist(data$sex)
sex <- extract_model(sex_model)
idade_model <- logist(data$idade)
idade_factor <- extract_model(idade_model)
multifocal_model <- logist(data$multi)
multifocal <- extract_model(multifocal_model)
neurite_model <- logist(data$neurite)
neurite <- extract_model(neurite_model)
mielite_model <- logist(data$mielite)
mielite <- extract_model(mielite_model)
adem_model <- logist(data$adem)
adem <- extract_model(adem_model)
edss_model <- logist(data$edss1)
edss_cont <- extract_model(edss_model)
edss3_model <- logist(data$edssM3)
edss_fact <- extract_model(edss3_model)
overweigth_model <- logist(data$sobrepe)
overweigth <- extract_model(overweigth_model)
zscore_model <- logist(data$bfaz)
zscore <- extract_model(zscore_model)
protein_model <- logist(data$prot40)
protein <- extract_model(protein_model)
cel_model <- logist(data$cel5)
cel <- extract_model(cel_model)
tabagism_model <- logist(data$tabagismo1)
tabagism <- extract_model(tabagism_model)
infecOrVac_model <- logist(data$inf_ou_vac_rec)
infecOrVac <- extract_model(infecOrVac_model)
table <- rbind(etnic, idade_factor, sex, multifocal, neurite, mielite,
adem, edss_cont, edss_fact, overweigth, zscore, protein, cel, tabagism, infecOrVac)
table$var <- c("nonCaucasian",">10 Years","Female","Multifocal","Neuritis",
"Myelitis","ADEM","EDSS","EDSS>3","Overweight","IMC_Zscore",
"LCR Protein > 40","LCR Cel > 5","Tabagism","Infeccion Or Vaccine")
colnames(table)[2] <- "Odds Ratio (MONEM)"
table$pvalue <- round(table$pvalue, digits = 4)
kable(table, align = c("l","c","c","c","c"),
col.names = c("Variable","Odds Ratio","Lower95%[IC]","Upper95%[CI]","p-value")) %>%
kable_styling(full_width = F)
log_table <- log(table[,2:4])
log_table <- log_table[-c(11),]
table <- table[-c(11),]
forestplot(labeltext = table$var,
mean = log_table$`Odds Ratio (MONEM)`,
lower = log_table$bottom,
upper = log_table$upper,
xlab = "Odds Ratio [95% CI] log-scaled",
boxsize = 0.2,
ci.vertices = TRUE,col=fpColors(box="black", lines="black", zero = "gray50"))
forestplot(labeltext = table$var,
mean = table$`Odds Ratio (MONEM)`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "Odds Ratio [95% CI] log-scaled",
boxsize = 0.2,
ci.vertices = TRUE,
col=fpColors(box="black", lines="black", zero = "gray50"
))
# Allocate values
mog <- data$group
idade <- data$idade
edss <- data$edssM3
sex <- data$sex
# Age
levels(idade) <- c(1,0)
idade <- relevel(idade, ref = "0")
# Sex
levels(sex) <- c(1,0)
sex <- relevel(sex, ref = "0")
# COMPOSITE
composite <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# Separate 0 or 1 Vs. 2 or 3
binary_composite <- ifelse(composite == 0 | composite == 1, 0, 1)
model_3 <- glm(mog ~ composite, family = "binomial")
model_2 <- glm(mog ~ as.factor(binary_composite), family = "binomial")
predicted_data <- data.frame(prob = model_3$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pc <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
predicted_data <- data.frame(prob = model_2$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
ggarrange(pc, pbin,
ncol = 2, nrow = 1,
labels = c("A","B"))
composite_model <- logist(composite, df = mog)
compositeBin_model <- logist(as.factor(binary_composite), df = mog)
composite_df <- extract_model(composite_model)
compositeBin_model <- extract_model(compositeBin_model)
names(composite_df) <- names(table)
names(compositeBin_model) <- names(table)
table <- rbind(table, composite_df, compositeBin_model)
composites <- rbind(composite_df, compositeBin_model)
log_table <- log(table[,2:4])
table$var[c(15,16)] <- c("Composite (for each point)", "Composite (=>2)")
composites$var <- c("Composite (for each point)", "Composite (=>2)")
kable(composites, align = c("l","c","c","c","c"), digits = 2) %>%
kable_styling(full_width = F)
forestplot(labeltext = table$var,
mean = log_table$`Odds Ratio (MONEM)`,
lower = log_table$bottom,
upper = log_table$upper,
xlab = "Odds Ratio [95% CI] log-scaled",
boxsize = 0.2,
ci.vertices = TRUE,
clip = c(-5,5),
col=fpColors(box="black", lines="black", zero = "gray50"))
age <- ggplot(data, aes(idade_onset, fill = mog))+
geom_density(alpha=0.5)+
theme_bw()
celplot <- ggplot(data, aes(lcr_cel1, fill = mog))+
geom_density(alpha=0.5)+
theme_bw()
protplot <- ggplot(data, aes(lcr_prot1, fill = mog))+
geom_density(alpha=0.5)+
theme_bw()
par(pty = "s")
rocob <- plot.roc(mog, model_3$fitted.values,
lwd = 4, print.auc = TRUE)
roc_model <- roc(mog, model_3$fitted.values)
roc <- data.frame(tpp=roc_model$sensitivities*100,
fpp=(1-roc_model$specificities)*100,
sensitivities=roc_model$sensitivities,
specificities=roc_model$specificities,
thresholds = roc_model$thresholds,
score= c("0",">=1",">=2","3","PAD"))
kable(roc, align = c("c","c","c","c","c","c"), digits = 3) %>%
kable_styling(full_width = F)
ggarrange(age, celplot, protplot,
labels = c("A","B","C"),
ncol = 2, nrow = 2)
cont_age_model <-logist(data$idade_onset)
cont_age <- extract_model(cont_age_model)
cel_model <- logist(data$lcr_cel1)
cel <- extract_model(cel_model)
prot_model <- logist(data$lcr_prot1)
prot <- extract_model(prot_model)
contTable <- rbind(cont_age,cel,prot)
contTable$var <- c("Age (each year)","LCR Cels","LCR Proteins")
kable(contTable, digits = 3, align = c("c","c","c","c")) %>%
kable_styling(full_width = F)
# install.packages("logistf")
#url <- "https://cran.r-project.org/src/contrib/Archive/elrm/elrm_1.2.4.tar.gz"
#pkgFile <- "elrm_1.2.4.tar.gz"
#download.file(url = url, destfile = pkgFile)
#install.packages("coda") # dependency
#install.packages(pkgs=pkgFile, type="source", repos=NULL)
library(elrm)
library(logistf)
mog
data("drugDat")
View(drugDat)
tab_adem <- xtabs(~mog + data$adem)
tab_adem
tab_adem[2,]
colSums(tab_adem)
data.frame(mog = c(0,1), adem = c(0,1), n = colSums(tab_adem))
data.frame(mog = tab_adem[2,], adem = c(0,1), n = colSums(tab_adem))
df_adem <- data.frame(mog = tab_adem[2,], adem = c(0,1), n = colSums(tab_adem))
elrm_adem <- elrm(formula = mog/n ~ adem, interest = ~adem, iter = 10000, dataset = df_adem, burnIn = 2000)
?r
?elrm
elrm_adem <- elrm(formula = mog/n ~ adem, interest = ~adem, iter = 10000, dataset = df_adem, burnIn = 2000, r = 2)
summary(elrm_adem)
plot(elrm_adem)
exp(elrm_adem$coeffs)
exp(elrm_adem$coeffs.ci)
tab_adem <- xtabs(~mog + data$adem)
tab_adem
data$neurite_b
tab_nob <- xtabs(~mog + data$neurite_b)
tab_nob <- xtabs(~mog + data$neurite_b)
tab_nob
df_nob <- data.frame(mog = tab_nob[2,], nob = c(0,1), n = colSums(tab_nob))
df_nob
elrm_nob <- elrm(formula = mog/n ~ nob, interest = ~nob, iter = 30000,
dataset = df_nob, burnIn = 5000, r = 2)
summar(elrm_nob)
summary(elrm_nob)
glm(mog ~ data$neurite_b, family = "binomial")
glm_nob <- glm(mog ~ data$neurite_b, family = "binomial")
summary(glm_nob)
logistf(mog ~ data$neurite_b)
round(logistf(mog ~ data$neurite_b), 3)
firth_nob <- logistf(mog ~ data$neurite_b)
exp(firth_nob$coefficients)
exp(firth_nob$ci.lower)
firth_nob$alpha
firth_nob$method.ci
firth_nob$betahist
firth_nob$ci.lower
exp(elrm_nob$coeffs.ci)
logistf(mog ~ data$adem)
firth_adem <- logistf(mog ~ data$adem)
firth_adem$coefficients
exp(firth_adem$coefficients)
exp(firth_adem$ci.lower)
?logistf
firth_adem <- logistf(mog ~ data$adem + data$idade_10)
summary(firth_adem)
coef(firth_adem)
exp(coef(firth_adem))
exp(coef(firth_nob))
?logistf
firth_adem <- logistf(mog ~ data$adem, pl = FALSE)
summary(firth_adem)
firth_adem <- logistf(mog ~ data$adem, pl = TRUE)
summary(firth_adem)
composite
nob <- as.numeric(data$neurite_b)
nob
composite4 <- composite + nob
glm(mog ~ composite4, family = "binomial")
composite4_model <- glm(mog ~ composite4, family = "binomial")
summary(composite4_model)
predicted_data <- data.frame(prob = composite4_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
rocob <- plot.roc(mog, model_3$fitted.values,
lwd = 4, print.auc = TRUE)
rocob <- plot.roc(mog, composite4_model$fitted.values,
lwd = 4, print.auc = TRUE)
par(pty = "s")
rocob <- plot.roc(mog, composite4_model$fitted.values,
lwd = 4, print.auc = TRUE)
roc <- data.frame(tpp=roc_model$sensitivities*100,
fpp=(1-roc_model$specificities)*100,
sensitivities=roc_model$sensitivities,
specificities=roc_model$specificities,
thresholds = roc_model$thresholds,
score= c("0",">=1",">=2",">=3","4","PAD"))
roc_model$sensitivities*100
specificities=roc_model$specificities
specificities
roc_model
roc_model <- roc(mog, composite4_model$fitted.values)
roc <- data.frame(tpp=roc_model$sensitivities*100,
fpp=(1-roc_model$specificities)*100,
sensitivities=roc_model$sensitivities,
specificities=roc_model$specificities,
thresholds = roc_model$thresholds,
score= c("0",">=1",">=2",">=3","4","PAD"))
kable(roc, align = c("c","c","c","c","c","c"), digits = 3) %>%
kable_styling(full_width = F)
composite4_model$fitted.values
View(roc_model)
roc_model <- roc(mog, model_3$fitted.values)
roc <- data.frame(tpp=roc_model$sensitivities*100,
fpp=(1-roc_model$specificities)*100,
sensitivities=roc_model$sensitivities,
specificities=roc_model$specificities,
thresholds = roc_model$thresholds,
score= c("0",">=1",">=2","3","PAD"))
kable(roc, align = c("c","c","c","c","c","c"), digits = 3) %>%
kable_styling(full_width = F)
tab_adem <- xtabs(~mog + data$adem)
df_adem <- data.frame(mog = tab_adem[2,], adem = c(0,1), n = colSums(tab_adem))
elrm_adem <- elrm(formula = mog/n ~ adem, interest = ~adem, iter = 10000,
dataset = df_adem, burnIn = 2000, r = 2)
tab_nob <- xtabs(~mog + data$neurite_b)
df_nob <- data.frame(mog = tab_nob[2,], nob = c(0,1), n = colSums(tab_nob))
elrm_nob <- elrm(formula = mog/n ~ nob, interest = ~nob, iter = 30000,
dataset = df_nob, burnIn = 5000, r = 2)
xtabs(~mog + data$adem)
xtabs(~mog + data$neurite_b)
data.frame(mog = tab_nob[2,], nob = c(0,1), n = colSums(tab_nob))
elrm_nob <- elrm(formula = mog/n ~ nob, interest = ~nob, iter = 30000,
dataset = df_nob, burnIn = 5000, r = 2)
plot(elrm_nob)
summary(elrm_nob)
summary(elrm_nob)
elrm_nob <- elrm(formula = mog/n ~ nob, interest = ~nob, iter = 30000,
dataset = df_nob, burnIn = 5000, r = 2)
summary(elrm_nob)
View(data)
View(v1)
filter(v1, id_paciente %in% data$id_paciente)
v1 <- filter(v1, id_paciente %in% data$id_paciente)
v1
View(v)
View(v1)
data$dd_m <- v1$disease_duration_m
summary(data$dd_m, group_by(data$mog))
t.test(data$dd_m ~ mog)
ggplot(data = data, aes(x = mog, y = dd_m))+
geom_boxplot()
ggplot(data = data, aes(x = mog, y = dd_m))+
geom_boxplot()+
geom_jitter()
data_frame(mog = mog, data$dd_m, edss = data$edssM3)
df <- data_frame(mog = mog, data$dd_m, edss = data$edssM3)
View(df)
xtabs(~mog + data$adem)
df <- select(data, id_paciente, adem)
df
View(df)
df <- select(data, id_paciente, adem, mog)
View(df)
data["id_paciente"==211,"idade"]
data["id_paciente" == 211, idade]
data["id_paciente" == 211, "idade"]
data["id_paciente" = 211, "idade"]
data["id_paciente" == 211, "idade"]
data["id_paciente" == 211,]
data["id_paciente" == 211,]
data[id_paciente == 211,]
data
ggplot(data = data, aes(x = mog, y = dd_m))+
geom_boxplot()+
geom_point()
idade
fenot <- (ifelse(data$neurite_b | data$mielite_transversa == 1, 0))
fenot <- (ifelse(data$neurite_b == 1 | data$mielite_transversa == 1, 1, 0))
fenot
sex
composite_fen <- as.numeric(idade) + as.numeric(sex) + fenot
composite_fen
composite_fen <- (as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + fenot
composite_fen
logist(composte_fen)
logist(composite_fen)
mog
composite_fen
fen_model <- logist(composite_fen)
dados <- extract_model(fen_model)
dados
predicted_data <- data.frame(prob = fen_model$fitted.values,
mog = mog)
length(composite_fen)
length(mog)
fen_model <- logist(composite_fen)
predicted_data <- data.frame(prob = fen_model$Model$fitted.values,
mog = mog)
fenot_model <- glm(mog ~ composite_fen, family = "binomial")
predicted_data <- data.frame(prob = fenot_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin
fenot
glm(mog ~ fenot, family = "binomial")
summary(glm(mog ~ fenot, family = "binomial"))
as.numeric(data$neurite_b)
data$neurite_b
composite_4_fen <- as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + data$neurite_b + data$mielite_transversa
composite_4_fen <- (as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + data$neurite_b + data$mielite_transversa
summary(glm(mog ~ composite_4_fen, family = "binomial"))
summary(glm(mog ~ composite_fen, family = "binomial"))
fenot_4_model <- glm(mog ~ composite_4_fen, family = "binomial")
predicted_data <- data.frame(prob = fenot_4_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin
composite_4_fen
rocob <- plot.roc(mog, fenot_model$fitted.values,
lwd = 4, print.auc = TRUE)
par(pty = "s")
rocob <- plot.roc(mog, fenot_model$fitted.values,
lwd = 4, print.auc = TRUE)
par(pty = "s")
rocob <- plot.roc(mog, fenot_model$fitted.values,
lwd = 4, print.auc = TRUE)
fenot <- (ifelse(data$neurite_b == 1 | data$mielite_transversa == 1, 2, 0))
composite_4_fen <- (as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + fenot
fenot_2 <- fenot <- (ifelse(data$neurite_b == 1 | data$mielite_transversa == 1, 2, 0))
composite_4_fen <- (as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + fenot_2
fenot_4_model <- glm(mog ~ composite_4_fen, family = "binomial")
fenot_model <- glm(mog ~ composite_fen, family = "binomial")
# FEN 3
predicted_data <- data.frame(prob = fenot_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin
# FEN 4
predicted_data <- data.frame(prob = fenot_4_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin
fenot_2
summary(fenot_4_model)
predicted_data <- data.frame(prob = fenot_4_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin
par(pty = "s")
rocob <- plot.roc(mog, fenot_model$fitted.values,
lwd = 4, print.auc = TRUE)
par(pty = "s")
rocob <- plot.roc(mog, fenot_4_model$fitted.values,
lwd = 4, print.auc = TRUE)
fenot <- (ifelse(data$neurite_b == 1 | data$mielite_transversa == 1, 1, 0))
fenot_2 <- fenot <- (ifelse(data$neurite_b == 1 | data$mielite_transversa == 1, 2, 0))
composite_fen <- (as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + fenot
composite_4_fen <- (as.numeric(idade) - 1)  + (as.numeric(sex) - 1) + fenot_2
fen_model <- logist(composite_fen)
dados <- extract_model(fen_model)
fenot_4_model <- glm(mog ~ composite_4_fen, family = "binomial")
fenot_model <- glm(mog ~ composite_fen, family = "binomial")
# FEN 3
predicted_data <- data.frame(prob = fenot_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin1 <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin1
# FEN 4
predicted_data <- data.frame(prob = fenot_4_model$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
pbin2 <- ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))+
theme_bw()
pbin2
ggarrange(pbin1, pbin2, nrow = 1, ncol = 2)
xtabs(~idade + sex)
idade
sex
cor(idade, sex)
glm(idade ~ sex)
glm(idade ~ sex, family = "binomial")
summary(glm(idade ~ sex, family = "binomial"))
exp(coef(glm(idade ~ sex, family = "binomial")))
summary(glm(mog ~ idade + sex, family = "binomial"))
summary(glm(mog ~ idade + sex + fenot, family = "binomial"))
summary(glm(mog ~ idade + sex + edss, family = "binomial"))
edss
summary(glm(mog ~ idade * sex, family = "binomial"))
summary(glm(mog ~ idade * fenot, family = "binomial"))
idade
summary(glm(mog ~ data$idade_onset * sex, family = "binomial"))
?emocempr
?clean_v1
remove.packages("emocempr")
library(devtools)
install_github("rafaelsommer1/emocempr")
install_github("rafaelsommer1/emocempr")
?clean_v1
library(emocempr)
?clean_v1
uninstall("emocempr")
??emocempr
.rs.restartR()
remove.packages("emocempr")
library(emocempr)
.libPaths()
library(emocempr)
remove.packages("emocempr")
