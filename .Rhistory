library(emocempr)
library(devtoll)
library(devtools)
install_github("rafaelsommer1/emocempr")
library(devtools)
build_manual()
datafile <- "C:/Users/Rafael/Documents/emocempv2_2105.csv"
emocemp_messy <- read.csv(datafile,
skip = 1,
encoding = "UTF-8") # Load Data
emocempv2 <- emocemp_messy[-c(1),-c(1:17)] # Exclude irrelevant rows and collumns from table
View(emocempv2)
# Renaming
colnames(emocempv2)
library(devtools)
install_github("rafaelsommer1/emocempr")
library(emocempr)
setwd("C:/Users/Rafael/Documents")
setwd("C:/Users/Rafael/Documents/")
library(devtools)
install_github("rafaelsommer1/emocempr")
library(emocempr)
?clean_v1
detach("package:emocempr", unload = TRUE)
library(devtools)
install_github("rafaelsommer1/emocempr")
library(emocempr)
?clean_v1
getwd()
dados_limpos <- clean_v1("C:/Users/Rafael/Documents/EMOCEMP V1 - Oficial_May21, 2020_08.04")
dados_limpos <- clean_v1("C:/Users/Rafael/Documents/EMOCEMP V1 - Oficial_May21, 2020_08.04.csv")
View(dados_limpos)
?clean_brain
dados_mri <- clean_brain("MRI_encefalo_EMOCEMP_V1_May 21, 2020_14.59.csv")
View(dados_mri)
library(emocempr)
v1 <- clean_v1("C:/Users/Rafael/Documents/EMOCEMP V1 - Oficial_May21, 2020_08.04")
v1 <- clean_v1("C:/Users/Rafael/Documents/EMOCEMP V1 - Oficial_May21, 2020_08.04")
v1 <- clean_v1("C:/Users/Rafael/Documents/EMOCEMP V1 - Oficial_May21, 2020_08.04.csv")
View(v1)
v2 <- clean_v2("C:/Users/Rafael/Documents/emocempv2_2105")
v2 <- clean_v2("C:/Users/Rafael/Documents/emocempv2_2105.csv")
brain <- clean_brain("C:/Users/Rafael/Documents/MRI_encefalo_EMOCEMP_V1_May 21, 2020_14.59.csv")
View(brain)
head(v1)
colnames(v1)
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
library(dplyr)
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
View(v2)
View(v1_new)
colnames(v2)
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1))
View(v2_new)
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
teste <- merge(v1_new,v2_new,by = "id_paciente")
View(teste)
?merge
teste <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
library(reshape2)
?melt
??reshape2
teste_wide <- dcast(teste, id_paciente ~ .)
View(teste_wide)
library(tidyr)
?spread
?reshape
repme <- c("edss","data_visita","peso","altura","tabagismo",
"dmd","lcr_prot","lcr_cel")
?melt
singleme <- (c(singleme1,singleme2))
singleme1 <- c("nascimento","idade_10","etnic","infeccao_2meses",
"data_vacina","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b")
singleme2 <- c("criterio_diag_v2","novo_surto_v2")
singleme <- (c(singleme1,singleme2))
teste_wide <- teste %>%
gather(key, value, -c(singleme)) %>%
separate(key, c("key","visit")) %>%
spread(key, value, convert = TRUE)
teste_wide <- teste %>%
gather(key, value, all_of(singleme)) %>%
separate(key, c("key","visit")) %>%
spread(key, value, convert = TRUE)
View(teste_wide)
?separate
View(teste_wide)
test <- data.frame(id = c(1,1,2,2,3,3), edss = c(5,4,3,2,0,0))
View(test)
library(data.table)
teste
View(teste)
?melt
teste_wide <- melt(setDT(teste), measure.vars = list((c"edss1","edss2"),
c("altura1","altura2"),c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"))
variable.name = c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel"))
list((c"edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"))
list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"))
teste_wide <- melt(setDT(teste), measure.vars = list(c("edss1","edss2"),
c("altura1","altura2"),c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"))
variable.name = c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel"))
c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel")
list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"))
teste_wide <- melt(setDT(teste), measure.vars = list(c("edss1","edss2"),
c("altura1","altura2"),c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"))
variable.name = c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel"))
teste_wide <- melt(setDT(teste), measure.vars = list(c("edss1","edss2"),
c("altura1","altura2"),c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2")),
variable.name = c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel"))
teste_wide <- melt(setDT(teste), measure.vars = list(c("edss1","edss2"),
c("altura1","altura2"),c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2")),
value.name = c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel"))
View(teste_wide)
class(teste_wide$lcr_cel)
class(teste_wide$lcr_prot)
str(teste_wide)
str(v1)
View(v2)
str(v2)
data.frame(evaluator_id = c(1,2,1,1,2,2,1,2,1,2),
patient_id = c(1,1,2,3,2,3,4,4,4,4),
result = c(1,0,0,0,1,1,2,4,2,2))
merge_v1v2 <- function (v1, v2, mode = c("long","wide")) {
if (mode = "long") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
return(v1v2_long)
}
if (mode = "wide") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
# Create rep measures list
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- supressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
return(v1v2_wide)
}
}
supressWarnings()
merge_v1v2 <- function (v1, v2, mode = c("long","wide")) {
if (mode = "long") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
return(v1v2_long)
}
if (mode = "wide") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
# Create rep measures list
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- suppressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
return(v1v2_wide)
}
}
merge_v1v2 <- function (v1, v2, mode = c("long","wide")) {
if (mode = "long") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
return(v1v2_long)
} else if (mode = "wide") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
# Create rep measures list
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- suppressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
return(v1v2_wide)
}
}
merge_v1v2 <- function (v1, v2, mode = c("long","wide")) {
if (mode == "long") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
return(v1v2_long)
} else if (mode == "wide") {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
# Create rep measures list
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- suppressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
return(v1v2_wide)
}
}
long <- merge_v1v2(v1,v2,mode = "long")
long <- merge_v1v2(v1,v2,mode = "wide")
wide <- merge_v1v2(v1,v2,mode = "wide")
long <- merge_v1v2(v1,v2,mode = "wide")
long <- merge_v1v2(v1,v2,mode = "long")
View(long)
?merge
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"),
all.x = TRUE)
View(v1v2_long)
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- suppressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
View(v1v2_wide)
v1v2_wide$data_visita
v1v2_wide$data_visita[data_visita == NA]
v1v2_wide$data_visita["data_visita" == NA]
v1v2_wide$Visit["data_visita" == NA] <-
v1v2_wide$Visit["data_visita" == NA]
v1v2_wide$Visit
v1v2_wide$Visit[v1v2_wide$data_visita == NA]
v1v2_wide$data_visita == NA
v1v2_wide$data_visita
v1v2_wide$data_visita == NA
is.na(v1v2_wide$data_visita)
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)]
View(v1)
v1v2_wide$Visit[is.na(v1v2_wide$edss)]
View(v2)
v1v2_wide$Visit[is.na(v1v2_wide$criterio_diag_v2)]
v1v2_wide$Visit[is.na(v1v2_wide$criterio_diag_v2)] == 2
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)]
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)] == 2
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)][== 2]
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)][v1v2_wide$Visit == 2]
v1v2_wide$Visit[is.na(v1v2_wide$data_visita) & == 2]
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)]
v1v2_test <- v1v2_wide %>%
mutate(visit = ifelse(v1v2_wide$Visit[is.na(v1v2_wide$data_visita)] == 2, NA, 1))
v1v2_test <- v1v2_wide %>%
mutate(visit = ifelse(v1v2_wide$data_visita == NA &
v1v2_wide$Visit == 2, NA, 1))
v1v2_wide$Visit[is.na(v1v2_wide$data_visita)]
v1v2_test$Visit[is.na(v1v2_wide$data_visita)]
v1v2_test$visit[is.na(v1v2_wide$data_visita)]
v1v2_test$visit
v1v2_test$visit[is.na(v1v2_wide$data_vacina)]
v1v2_test$visit[is.na(v1v2_wide$data_vacina)]
v1v2_wide$data_vacina
v1v2_wide$data_visita
v1v2_test$visit[is.na(v1v2_wide$data_visita)]
is.na(v1v2_wide$data_vacina) & != 1
v1v2_test$visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$visit != 1)]
v1v2_test$Visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$Visit != 1)]
v1v2_test$Visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$Visit != 1)]
v1v2_test$Visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$Visit != 1)] <- NA
return(v1v2_wide)
v1v2_wide$Visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$Visit != 1)] <- NA
return(v1v2_wide)
v1v2_wide
View(v1v2_wide)
#' Merge visit 1 and visit 2 dataframes
#' @import dplyr
#' @import stringr
#' @import lubridate
#' @param v1 data frame resulted from \link{clean_V1}
#' @param v2 data frame resulted from \link{clean_V2}
#' @param mode select "long" or "wide" for differente merge options. If a single line for each subject is desired = "wide". If a line for each visit is desired ; = "long"
#' @return a data frame with the input brain mri data cleaned
#' @author R.C.S
#' @export
merge_v1v2 <- function (v1, v2, mode = c("long","wide"), all.patients = FALSE) {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
# Check for patient value and merge datasets
if (all.patients = TRUE) {
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"),
all.x = TRUE)
} else {
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
}
# Exit with long if mode = long
if (mode == "long") {
return(v1v2_long)
# Process merged data if mode = wide
} else if (mode == "wide") {
# Create rep measures list
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- suppressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
v1v2_wide$Visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$Visit != 1)] <- NA
return(v1v2_wide)
}
}
merge_v1v2 <- function (v1, v2, mode = c("long","wide"), all.patients = FALSE) {
v1_new <- v1 %>%
select(c("id_paciente","data_visita","nascimento","idade_10",
"sex","etnic","peso","altura","imc","infeccao_2meses",
"data_vacina","tabagismo","edss","lcr_cel","lcr_prot",
"dmd","romboencefalite","adem","mielite_transversa",
"mielite_parcial","neurite_u","neurite_b"))
v2_new <- v2 %>%
mutate(dmd = ifelse(nenhum_dmd == 1,0,1)) %>%
select(c("id_paciente","data_visita","peso","altura",
"imc","tabagismo","edss","criterio_diag_v2",
"novo_surto_v2","lcr_cel","lcr_prot","dmd"))
# Check for patient value and merge datasets
if (all.patients == TRUE) {
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"),
all.x = TRUE)
} else {
v1v2_long <- merge(v1_new,v2_new,by = "id_paciente",suffixes = c("1","2"))
}
# Exit with long if mode = long
if (mode == "long") {
return(v1v2_long)
# Process merged data if mode = wide
} else if (mode == "wide") {
# Create rep measures list
repme <- list(c("edss1","edss2"),c("altura1","altura2"),
c("peso1","peso2"),c("data_visita1","data_visita2"),
c("imc1","imc2"),c("dmd1","dmd2"),
c("lcr_prot1","lcr_prot2"),
c("lcr_cel1","lcr_cel2"),c("tabagismo1","tabagismo2"))
name_repme <- c("edss","altura","peso","data_visita",
"imc","dmd","lcr_prot","lcr_cel","tabagismo")
# Melt data
v1v2_wide <- suppressWarnings(data.table::melt(setDT(v1v2_long), measure.vars = repme,
variable.name = "Visit", value.name = name_repme))
v1v2_wide$Visit[is.na(v1v2_wide$data_visita) & (v1v2_wide$Visit != 1)] <- NA
return(v1v2_wide)
}
}
wide1 <- merge_v1v2(v1,v2,mode = "wide")
long1 <- merge_v1v2(v1,v2,mode = "long")
long1 <- merge_v1v2(v1,v2,mode = "long", all.patients = TRUE)
wide2 <- merge_v1v2(v1,v2,mode = "wide", all.patients = TRUE)
View(wide2)
devtools::load_all(".")
library(emocempr)
warnings()
?merge_v1v2
?merge_v1v2
devtools::load_all(".")
?merge_v1v2
library(emocempr)
library(devtools)
build_manual()
