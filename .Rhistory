"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Dumming variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
library(emocempr)
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Dumming variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
datafile <- "C:/Users/Rafael/Documents/MRI_spinal_EMOCEMP_V1_June 16, 2020_11.02.csv"
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Dumming variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
View(mridata)
names_axialt1pos <- c("axt1pos_cerv","axt1pos_tor","axt1pos_lomb")
mridata <- clean("axialt1pos",mridata,3,names_axialt1pos)
names_sagitalt1pos <- c("sgtt1pos_cerv","sgtt1pos_tor","sgtt1pos_lomb")
mridata <- clean("sagitalt1pos",mridata,3,names_sagitalt1pos)
names_axialt2gre <- c("axt2gre_cerv","axt2gre_tor","axt2gre_lomb")
mridata <- clean("axialt2gre",mridata,3,names_axialt2gre)
View(mridata)
names_alt <- c("mt","mcm","mp","mhm","bright_spot")
splited <- split_mcv("alt_presentes",5,mridata)
View(splited)
splited[any(>7)]
splited[,any(>7)]
splited > 7
splited == 7
splited[,==7]
splited[splited == 7]
splited[splited == 7] <- 5
View(splited)
df <- mutate_mcv(names_alt, splited)
View(df)
mridata <- mridata[, names(mridata) != "alt_presentes"]
mridata <- cbind(mridata, df)
names_realce <- c("perif_anel_comp","perif_anel_inc","pseudorealce",
"realce_homogeneo","realce_heterog","realce_outros")
mridata <- clean("tipo_realce",mridata,6,names_realce)
mridata[["num_lesoes_cerv"]]
for (i in c("num_lesoes_cerv","num_lesoes_tor","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
as.numeric(mridata[["num_lesoes_cerv"]])
as.numeric(mridata[["num_lesoes_tor"]])
for (i in c("num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
View(mridata)
mridata[,"campo_mag"] <-
}
mridata[,"campo_mag"]
as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.factor(mridata[,"campo_mag"])
mridata[,"campo_mag"]
clean_spinal <- function(datafile){
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Cleaning multiple choice variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
names_axialt1pos <- c("axt1pos_cerv","axt1pos_tor","axt1pos_lomb")
mridata <- clean("axialt1pos",mridata,3,names_axialt1pos)
names_sagitalt1pos <- c("sgtt1pos_cerv","sgtt1pos_tor","sgtt1pos_lomb")
mridata <- clean("sagitalt1pos",mridata,3,names_sagitalt1pos)
names_axialt2gre <- c("axt2gre_cerv","axt2gre_tor","axt2gre_lomb")
mridata <- clean("axialt2gre",mridata,3,names_axialt2gre)
names_alt <- c("mt","mcm","mp","mhm","bright_spot")
splited <- split_mcv("alt_presentes",5,mridata)
splited[splited == 7] <- 5
df <- mutate_mcv(names_alt, splited)
mridata <- mridata[, names(mridata) != "alt_presentes"]
mridata <- cbind(mridata, df)
names_realce <- c("perif_anel_comp","perif_anel_inc","pseudorealce",
"realce_homogeneo","realce_heterog","realce_outros")
mridata <- clean("tipo_realce",mridata,6,names_realce)
# Clean numeric
message("Cleaning numeric variables")
for (i in c("num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
message("Done")
# Clean factors
message("Cleaning factors")
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.factor(mridata[,"campo_mag"])
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Cleaning multiple choice variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
names_axialt1pos <- c("axt1pos_cerv","axt1pos_tor","axt1pos_lomb")
mridata <- clean("axialt1pos",mridata,3,names_axialt1pos)
names_sagitalt1pos <- c("sgtt1pos_cerv","sgtt1pos_tor","sgtt1pos_lomb")
mridata <- clean("sagitalt1pos",mridata,3,names_sagitalt1pos)
names_axialt2gre <- c("axt2gre_cerv","axt2gre_tor","axt2gre_lomb")
mridata <- clean("axialt2gre",mridata,3,names_axialt2gre)
names_alt <- c("mt","mcm","mp","mhm","bright_spot")
splited <- split_mcv("alt_presentes",5,mridata)
splited[splited == 7] <- 5
df <- mutate_mcv(names_alt, splited)
mridata <- mridata[, names(mridata) != "alt_presentes"]
mridata <- cbind(mridata, df)
names_realce <- c("perif_anel_comp","perif_anel_inc","pseudorealce",
"realce_homogeneo","realce_heterog","realce_outros")
mridata <- clean("tipo_realce",mridata,6,names_realce)
# Clean numeric
message("Cleaning numeric variables")
for (i in c("num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
message("Done")
# Clean factors
message("Cleaning factors")
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.factor(mridata[,"campo_mag"])
mridata[,"campo_mag"]
levels(mridata[,"campo_mag"])
levels(mridata[,"campo_mag"]) <- c("1.5T","3.0T","<1.5T")
mridata[,"campo_mag"]
mridata[,"lesoes_medulares"] <- as.numeric(mridata[,"lesoes_medulares"])
mridata[,"lesoes_medulares"] <- as.numeric(mridata[,"lesoes_medulares"])
mridata[,"lesoes_medulares"] <- as.factor(mridata[,"lesoes_medulares"])
mridata[,"lesoes_medulares"]
levels(mridata[,"lesoes_medulares"]) <- c("sim","nao")
mridata[,"lesoes_medulares"]
mridata[,"letm"] <- as.numeric(mridata[,"letm"])
mridata[,"letm"] <- as.factor(mridata[,"letm"])
mridata[,"letm"]
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Cleaning multiple choice variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
names_axialt1pos <- c("axt1pos_cerv","axt1pos_tor","axt1pos_lomb")
mridata <- clean("axialt1pos",mridata,3,names_axialt1pos)
names_sagitalt1pos <- c("sgtt1pos_cerv","sgtt1pos_tor","sgtt1pos_lomb")
mridata <- clean("sagitalt1pos",mridata,3,names_sagitalt1pos)
names_axialt2gre <- c("axt2gre_cerv","axt2gre_tor","axt2gre_lomb")
mridata <- clean("axialt2gre",mridata,3,names_axialt2gre)
names_alt <- c("mt","mcm","mp","mhm","bright_spot")
splited <- split_mcv("alt_presentes",5,mridata)
splited[splited == 7] <- 5
df <- mutate_mcv(names_alt, splited)
mridata <- mridata[, names(mridata) != "alt_presentes"]
mridata <- cbind(mridata, df)
names_realce <- c("perif_anel_comp","perif_anel_inc","pseudorealce",
"realce_homogeneo","realce_heterog","realce_outros")
mridata <- clean("tipo_realce",mridata,6,names_realce)
# Clean numeric
message("Cleaning numeric variables")
for (i in c("num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
message("Done")
# Clean factors
message("Cleaning factors")
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.factor(mridata[,"campo_mag"])
levels(mridata[,"campo_mag"]) <- c("1.5T","3.0T","<1.5T")
mridata[,"lesoes_medulares"] <- as.numeric(mridata[,"lesoes_medulares"])
mridata[,"lesoes_medulares"] <- as.factor(mridata[,"lesoes_medulares"])
levels(mridata[,"lesoes_medulares"]) <- c("sim","nao")
df <- split_mcv("letm",3,mridata)
View(df)
df[df == 2 | df == 3]
df[df == 2 | df == 3] <- 2
clean_spinal <- function(datafile){
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Cleaning multiple choice variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
names_axialt1pos <- c("axt1pos_cerv","axt1pos_tor","axt1pos_lomb")
mridata <- clean("axialt1pos",mridata,3,names_axialt1pos)
names_sagitalt1pos <- c("sgtt1pos_cerv","sgtt1pos_tor","sgtt1pos_lomb")
mridata <- clean("sagitalt1pos",mridata,3,names_sagitalt1pos)
names_axialt2gre <- c("axt2gre_cerv","axt2gre_tor","axt2gre_lomb")
mridata <- clean("axialt2gre",mridata,3,names_axialt2gre)
names_alt <- c("mt","mcm","mp","mhm","bright_spot")
splited <- split_mcv("alt_presentes",5,mridata)
splited[splited == 7] <- 5
df <- mutate_mcv(names_alt, splited)
mridata <- mridata[, names(mridata) != "alt_presentes"]
mridata <- cbind(mridata, df)
names_realce <- c("perif_anel_comp","perif_anel_inc","pseudorealce",
"realce_homogeneo","realce_heterog","realce_outros")
mridata <- clean("tipo_realce",mridata,6,names_realce)
# Clean numeric
message("Cleaning numeric variables")
for (i in c("num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
message("Done")
# Clean factors
message("Cleaning factors")
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.factor(mridata[,"campo_mag"])
levels(mridata[,"campo_mag"]) <- c("1.5T","3.0T","<1.5T")
mridata[,"lesoes_medulares"] <- as.numeric(mridata[,"lesoes_medulares"])
mridata[,"lesoes_medulares"] <- as.factor(mridata[,"lesoes_medulares"])
levels(mridata[,"lesoes_medulares"]) <- c("sim","nao")
names_letm <- c("presente","ausente")
df <- split_mcv("letm",3,mridata)
df[df == 1 | df == 2] <- 1
mridata <- read.csv(datafile, encoding = "UTF-8", skip = 1)
mridata <- mridata[-c(1),-c(1:17)]
# Rename
print("Renaming")
colnames(mridata) <- c("avaliador","id_participante","data_exame",
"rm_medula","campo_mag","campo_mag_text",
"axialt2","sagitalt2","stirsagital",
"sagitalt1pre","axialt1pre","axialt1pos",
"sagitalt1pos","axialt2gre","seq_nao_realizadas",
"lesoes_medulares","lesoes_medulares_text",
"num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb",
"alt_presentes","letm","letm_text_cm","letm_text_seg",
"outras_alt_coments","realce","tipo_realce","tipo_realce_text")
print ("Done")
# Define Clean
print("Dumming multiple choice variables")
clean <- function(var,database,n,names){
df <- dummie_mcv(names = names,
var = var,
n = n,
dataf = database)
database <- database[, names(database) != var]
database <- cbind(database, df)
return(database)
}
# Cleaning multiple choice variables
names_at2 <- c("axialt2_cerv","axialt2_tor","axialt2_lomb")
mridata <- clean("axialt2",mridata,3,names_at2)
names_sagt2 <- c("sagt2_cerv","sagt2_tor","sagt2_lomb")
mridata <- clean("sagitalt2",mridata,3,names_sagt2)
names_stirsag <- c("stir_cerv","stir_tor","stir_lomb")
mridata <- clean("stirsagital",mridata,3,names_stirsag)
names_sagt1pr <- c("sagt1pr_cerv","sagt1pr_tor","sagt1pr_lomb")
mridata <- clean("sagitalt1pre",mridata,3,names_sagt1pr)
names_axt1pr <- c("axt1pr_cerv","axt1pr_tor","axt1pr_lomb")
mridata <- clean("axialt1pre",mridata,3,names_axt1pr)
names_axialt1pos <- c("axt1pos_cerv","axt1pos_tor","axt1pos_lomb")
mridata <- clean("axialt1pos",mridata,3,names_axialt1pos)
names_sagitalt1pos <- c("sgtt1pos_cerv","sgtt1pos_tor","sgtt1pos_lomb")
mridata <- clean("sagitalt1pos",mridata,3,names_sagitalt1pos)
names_axialt2gre <- c("axt2gre_cerv","axt2gre_tor","axt2gre_lomb")
mridata <- clean("axialt2gre",mridata,3,names_axialt2gre)
names_alt <- c("mt","mcm","mp","mhm","bright_spot")
splited <- split_mcv("alt_presentes",5,mridata)
splited[splited == 7] <- 5
df <- mutate_mcv(names_alt, splited)
mridata <- mridata[, names(mridata) != "alt_presentes"]
mridata <- cbind(mridata, df)
names_realce <- c("perif_anel_comp","perif_anel_inc","pseudorealce",
"realce_homogeneo","realce_heterog","realce_outros")
mridata <- clean("tipo_realce",mridata,6,names_realce)
# Clean numeric
message("Cleaning numeric variables")
for (i in c("num_lesoes_cerv","num_lesoes_torac","num_lesoes_lomb")){
mridata[[i]] <- as.numeric(mridata[[i]])}
message("Done")
# Clean factors
message("Cleaning factors")
mridata[,"campo_mag"] <- as.numeric(mridata[,"campo_mag"])
mridata[,"campo_mag"] <- as.factor(mridata[,"campo_mag"])
levels(mridata[,"campo_mag"]) <- c("1.5T","3.0T","<1.5T")
mridata[,"lesoes_medulares"] <- as.numeric(mridata[,"lesoes_medulares"])
mridata[,"lesoes_medulares"] <- as.factor(mridata[,"lesoes_medulares"])
levels(mridata[,"lesoes_medulares"]) <- c("sim","nao")
names_letm <- c("presente","ausente")
df <- split_mcv("letm",3,mridata)
df[df == 1 | df == 2] <- 1
df <- mutate_mcv(names_letm)
View(df)
View(df)
df <- mutate_mcv(names_letm,df)
df <- split_mcv("letm",3,mridata)
View(df)
df[df == 1 | df == 2] <- 1
df <- mutate_mcv(names_letm,df)
names_letm <- c("presente","ausente","tmp")
df <- split_mcv("letm",3,mridata)
df[df == 1 | df == 2] <- 1
df <- mutate_mcv(names_letm,df)
View(df)
names_letm <- c("presente","tmp","ausente")
df <- split_mcv("letm",3,mridata)
df[df == 1 | df == 2] <- 1
df <- mutate_mcv(names_letm,df)
names_letm <- c("presente","tmp","ausente")
df <- split_mcv("letm",3,mridata)
df[df == 1 | df == 2] <- 1
df <- mutate_mcv(names_letm,df)
df[,-2]
df <- df[,-2]
mridata <- mridata[, names(mridata) != "letm"]
mridata <- cbind(mridata, df)
View(mridata)
dmy(mridata[,"data_exame"])
lubridate::dmy(mridata[,"data_exame"])
devtools::load_all(".")
library(devtools)
install.packages("pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
git pull
pkgdown::build_site()
