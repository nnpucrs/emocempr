p
vector <- data.frame(var = variable[[2]],
OR = IC[[1]],
bottom = IC[[2]],
upper = IC[[3]],
pvalue = p[[2]])
View(vector)
extract_model <- function(model){
IC <- model$IC[2,]
variable <- names(etnic_model$IC[,2])
p <- coef(model$Model)[,4]
vector <- data.frame(var = variable[[2]],
OR = IC[[1]],
bottom = IC[[2]],
upper = IC[[3]],
pvalue = p[[2]])
}
extract_model <- function(model){
IC <- model$IC[2,]
variable <- names(etnic_model$IC[,2])
p <- coef(model$Model)[,4]
df <- data.frame(var = variable[[2]],
OR = IC[[1]],
bottom = IC[[2]],
upper = IC[[3]],
pvalue = p[[2]])
return(df)
}
extract_model(etnic_model)
extract_model(etnic_model)
etnic_model <- logist(data$etnic)
etnic <- extract_model(etnic_model)
etnic
logist <- function(variavel, print = FALSE) {
model <- glm(group ~ variavel, data ,
family = "binomial"(link="logit"),
na.action = na.exclude)
IC <- round(exp(cbind(OR = coef(model), confint(model))), digits = 3)
if(print){
print(summary(model))
print(IC)}
suma <- summary(model)
return(list(IC = IC, Model = suma ))
}
data$edss1
data$edss2
data$edss1
mutate(data, edss_3 = ifelse(data$edss1 >= 3, 1, 0))
mutate
?mutate
data <- data %>% mutate(edssM3 = ifelse(edss1 >= 3, 1, 0))
data$edssM3
edss_fact <- extract_model(edss3_model)
edss3_model <- logist(data$edssM3)
edss_fact <- extract_model(edss3_model)
edss_fact
extract_model <- function(model){
IC <- model$IC[2,]
variable <- names(model$IC[,2])
p <- coef(model$Model)[,4]
df <- data.frame(var = variable[[2]],
OR = IC[[1]],
bottom = IC[[2]],
upper = IC[[3]],
pvalue = p[[2]])
return(df)
}
edss_fact <- extract_model(edss3_model)
edss_fact
sex_model <- logist(data$sex)
sex <- extract_model(sex_model)
sex
log(sex$bottom)
log(sex$upper)
log(sex$OR)
zscore_model <- logist(data$bfaz)
zscore <- extract_model(zscore_model)
etnic_model <- logist(data$etnic)
etnic <- extract_model(etnic_model)
sex_model <- logist(data$sex)
sex <- extract_model(sex_model)
idade_model <- logist(data$idade)
idade_factor <- extract_model(idade_model)
multifocal_model <- logist(data$multi)
multifocal <- extract_model(multifocal_model)
neurite_model <- logist(data$neurite)
neurite <- extract_model(neurite_model)
mielite_model <- logist(data$mielite)
mielite <- extract_model(mielite_model)
adem_model <- logist(data$adem)
adem <- extract_model(adem_model)
edss_model <- logist(data$edss1)
edss_cont <- extract_model(edss_model)
data <- data %>% mutate(edssM3 = ifelse(edss1 >= 3, 1, 0))
edss3_model <- logist(data$edssM3)
edss_fact <- extract_model(edss3_model)
overweigth_model <- logist(data$sobrepe)
overweigth <- extract_model(overweigth_model)
zscore_model <- logist(data$bfaz)
zscore <- extract_model(zscore_model)
protein_model <- logist(data$lcr_prot1)
protein <- extract_model(protein_model)
cel_model <- logist(data$lcr_cel1)
cel <- extract_model(cel_model)
data$sobrepe
data$adem
rbind(etnic, idade_factor, sex, multifocal, neurite, mielite,
adem, edss_cont, edss_fact, overweigth, zscore, protein, cel)
logist(data$sobrepe)
etnic_model <- logist(data$etnic)
etnic <- extract_model(etnic_model)
sex_model <- logist(data$sex)
sex <- extract_model(sex_model)
idade_model <- logist(data$idade)
idade_factor <- extract_model(idade_model)
multifocal_model <- logist(data$multi)
multifocal <- extract_model(multifocal_model)
neurite_model <- logist(data$neurite)
neurite <- extract_model(neurite_model)
mielite_model <- logist(data$mielite)
mielite <- extract_model(mielite_model)
adem_model <- logist(data$adem)
class(data$adem)
glm(data$group ~ data$adem, family = "binomial", na.action = na.exclude)
adem_model <- logist(data$adem)
data$adem
levels(data$adem)
logist(data$adem)
adem_model <- logist(data$adem)
edss_model <- logist(data$edss1)
logist(adem)
logist(data$adem)
logist(as.factor(data$adem))
logist(as.integer(data$adem))
data$adem
fisher.test(data$group,data$adem)
table <- rbind(etnic, idade_factor, sex, multifocal, neurite, mielite,
adem, edss_cont, edss_fact, overweigth, zscore, protein, cel)
table$var <- c("nonCaucasian",">10 Years","Female","Multifocal","Neurite",
"Myelite","ADEM","EDSS","EDSS>3","Overweight","IMC_Zscore",
"LCR Protein","LCR Cel")
table
colnames(table)
colnames(table)[2]
colnames(table)[2] <- "OR, MOGAb+ as Reference"
table
table$pvalue <- round(table$pvalue, digits = 4)
table
install.packages("logistf")
library(logistf)
logistf(data$group ~ data$adem)
logistf(data$group ~ data$neurite)
logistf(data$group ~ data$mielite)
lr <- logistf(data$group ~ data$adem)
summary(lr)
lr
lr$coefficients
exp(lr$coefficients)
exp(lr$coefficients)
exp(lr$method.ci)
exp(lr$ci.upper
exp(lr$ci.upper)
exp(lr$ci.upper)
exp(lr$ci.lower)
lr <- logistf(data$group ~ data$mielite)
exp(lr$ci.lower)
exp(lr$ci.upper)
lr <- logistf(data$group ~ data$idade)
summary(lr)
exp(coef(lr))
exp(c(coef(lr),lr$ci.lower, lr$ci.upper))
confint(lr)
summary(lr)
table
log_table <- log(table[,2:4])
log_table
install.packages("forestplot")
library(forestplot)
plot <- forestplot(labeltext = table$var,
mean = log_table$`OR, MOGAb+ as Reference`,
lower = log_table$bottom,
upper = log_table$upper)
log_table
log_table
log_table[-7,]
table <- table[-7,]
log_table <- log_table[-7,]
plot <- forestplot(labeltext = table$var,
mean = log_table$`OR, MOGAb+ as Reference`,
lower = log_table$bottom,
upper = log_table$upper)
plot
plot(plot)
forestplot(labeltext = table$var,
mean = log_table$`OR, MOGAb+ as Reference`,
lower = log_table$bottom,
upper = log_table$upper)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
boxsize = 0.2)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->"
boxsize = 0.2)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
boxsize = 0.2)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
colour = trait,
boxsize = 0.2)
log_table <- log_table[-c(7,8,9),]
table <- table[-c(7,8,9),]
forestplot(labeltext = table$var,
mean = log_table$`OR, MOGAb+ as Reference`,
lower = log_table$bottom,
upper = log_table$upper)
log_table <- log_table[-c(7,8,9),]
table <- table[-c(7,8,9),]
forestplot(labeltext = table$var,
mean = log_table$`OR, MOGAb+ as Reference`,
lower = log_table$bottom,
upper = log_table$upper)
table <- rbind(etnic, idade_factor, sex, multifocal, neurite, mielite,
adem, edss_cont, edss_fact, overweigth, zscore, protein, cel)
table$var <- c("nonCaucasian",">10 Years","Female","Multifocal","Neurite",
"Myelite","ADEM","EDSS","EDSS>3","Overweight","IMC_Zscore",
"LCR Protein","LCR Cel")
colnames(table)[2] <- "OR, MOGAb+ as Reference"
table$pvalue <- round(table$pvalue, digits = 4)
table
log_table <- log(table[,2:4])
table
table[7,]
table[c(7,12,13),]
log_table <- log_table[-c(7,12,13),]
table <- table[-c(7,12,13),]
table
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
colour = trait,
boxsize = 0.2)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
boxsize = 0.2)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
boxsize = 0.2,
hrzl_lines = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
boxsize = 0.2,
hrzl_lines = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "<------- Favors EM | Favors MONEM ----------->",
boxsize = 0.2,
ci.vertices = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "     <---FAVORS EM---    ---FAVORS MONEM--->",
boxsize = 0.2,
ci.vertices = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "     <---FAVORS EM---              ---FAVORS MONEM--->",
boxsize = 0.2,
ci.vertices = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "           <---FAVORS EM---              ---FAVORS MONEM--->",
boxsize = 0.2,
ci.vertices = TRUE)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "           <---FAVORS EM---              ---FAVORS MONEM--->",
boxsize = 0.2,
ci.vertices = TRUE,
col=fpColors(box="black", lines="black", zero = "gray50"))
gpar(lwd)
lwd
png(file.path(workdir, "Figures/Forestplot.png"),width=960, height=640)
png(file.path(getwd(), "Figures/Forestplot.png"),width=960, height=640)
png(file.path("Forestplot.png"),width=960, height=640)
forestplot(labeltext = table$var,
mean = table$`OR, MOGAb+ as Reference`,
lower = table$bottom,
upper = table$upper,
xlog = TRUE,
xlab = "           <---FAVORS EM---              ---FAVORS MONEM--->",
boxsize = 0.2,
ci.vertices = TRUE,
col=fpColors(box="black", lines="black", zero = "gray50"
))
data$idade
data$group
as.numeric(data$group)
as.numeric(data$idade)
data$idade
levels(data$idade
)
median(data$edssM3)
mean(data$edssM3)
mog <- data$group
idade <- data$idade
edss <- data$edssM3
sex <- data$sex
# Relevel
levels(mog)
levels(idade)
levels(idade) <- c(1,0)
levels(idade)
relevel(idade, ref = 1)
relevel(idade, ref = 0)
relevel(idade, ref = 0)
relevel(idade, ref = "0")
levels(edss)
levels(edss)
edss <- data$edssM3
levels(edss)
data$edssM3
edss <- as.factor(edss)
edss
# Sex
sex
# Sex
levels(sex) <- c(1,0)
sex <- relevel(sex, ref = "0")
sex
as.numeric(sex)
as.numeric(sex) - 1
# COMPOSITE
(as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
(as.numeric(sex)-1)
(as.numeric(idade) - 1)
edss
edss <- data$edssM3
(as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# COMPOSITE
composite <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
as.factor(composite)
model <- glm(mog ~ as.factor(composite), family = "binomial")
summary(model)
model <- glm(mog ~ composite, family = "binomial")
summary(model)
exp(coef(model))
composite_2 <- (as.numeric(sex)-1) + (as.numeric(idade) - 1)
model_2 <- glm(mog ~ composite_2, family = "binomial")
exp(coef(model_2))
summary(model_2)
composite_2
composite_3
# COMPOSITE
composite_3 <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# COMPOSITE
composite_3
composite_3
# Separate 0 or 1 Vs. 2 or 3
binary_composite <- ifelse(composite == 0 | composite == 1, 0, 1)
binary_composite
model_2 <- glm(mog ~ as.factor(binary_composite), family = "binomial")
summary(model_2)
exp(coef(model_2))
confint(model_2)
model_2 <- glm(mog ~ binary_composite, family = "binomial")
confint(model_2)
# Separate 0 or 1 Vs. 2 or 3
binary_composite <- ifelse(composite == 0 | composite == 1, 0, 1)
model_3 <- glm(mog ~ composite, family = "binomial")
model_2 <- glm(mog ~ as.factor(binary_composite), family = "binomial")
# COMPOSITE
composite <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# Separate 0 or 1 Vs. 2 or 3
binary_composite <- ifelse(composite == 0 | composite == 1, 0, 1)
model_3 <- glm(mog ~ composite, family = "binomial")
model_2 <- glm(mog ~ as.factor(binary_composite), family = "binomial")
```{r}
# Allocate values
mog <- data$group
idade <- data$idade
edss <- data$edssM3
sex <- data$sex
# Age
levels(idade) <- c(1,0)
idade <- relevel(idade, ref = "0")
# EDSS
edss <- as.factor(edss)
# Sex
levels(sex) <- c(1,0)
sex <- relevel(sex, ref = "0")
# COMPOSITE
composite <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# Separate 0 or 1 Vs. 2 or 3
binary_composite <- ifelse(composite == 0 | composite == 1, 0, 1)
model_3 <- glm(mog ~ composite, family = "binomial")
model_2 <- glm(mog ~ as.factor(binary_composite), family = "binomial")
# COMPOSITE
composite <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
(as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# Allocate values
mog <- data$group
idade <- data$idade
edss <- data$edssM3
sex <- data$sex
# Age
levels(idade) <- c(1,0)
idade <- relevel(idade, ref = "0")
# EDSS
edss <- as.factor(edss)
# Sex
levels(sex) <- c(1,0)
sex <- relevel(sex, ref = "0")
# Allocate values
mog <- data$group
idade <- data$idade
edss <- data$edssM3
sex <- data$sex
# Age
levels(idade) <- c(1,0)
idade <- relevel(idade, ref = "0")
# Sex
levels(sex) <- c(1,0)
sex <- relevel(sex, ref = "0")
# COMPOSITE
composite <- (as.numeric(sex)-1) + (as.numeric(idade) - 1) + edss
# Separate 0 or 1 Vs. 2 or 3
binary_composite <- ifelse(composite == 0 | composite == 1, 0, 1)
model_3 <- glm(mog ~ composite, family = "binomial")
model_2 <- glm(mog ~ as.factor(binary_composite), family = "binomial")
predicted_data <- data.frame(prob = model_2$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
install.packages("cowplot")
library(ggplot2)
library(ggplot2)
library(cowplot)
ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))
```{r}
ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))
ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))
predicted_data <- data.frame(prob = model_3$fitted.values,
mog = mog)
predicted_data <- predicted_data[order(predicted_data$prob, decreasing = FALSE),]
predicted_data$rank <- 1:nrow(predicted_data)
ggplot(data = predicted_data, aes(x = rank, y = prob))+
geom_point(aes(color=mog))
table <- rbind(etnic, idade_factor, sex, multifocal, neurite, mielite,
adem, edss_cont, edss_fact, overweigth, zscore, protein, cel)
table$var <- c("nonCaucasian",">10 Years","Female","Multifocal","Neurite",
"Myelite","ADEM","EDSS","EDSS>3","Overweight","IMC_Zscore",
"LCR Protein","LCR Cel")
colnames(table)[2] <- "Odds Ratio (MONEM)"
table$pvalue <- round(table$pvalue, digits = 4)
log_table <- log(table[,2:4])
